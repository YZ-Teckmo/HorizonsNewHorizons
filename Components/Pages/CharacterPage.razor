@page "/character/{id:int}"
@rendermode InteractiveServer
@using Database
@inject HttpClient Http

@code {
    bool Edit = true;
    int Tab = 0;
    int InfoTab = 0;
    void ChangeTab(int index)
    {
        Tab = index;
    }
    void ChangeInfoTab(int index)
    {
        InfoTab = index;
    }
    [Parameter] public int id { get; set; }
    Character? Model = new();
    protected override async Task OnInitializedAsync()
    {
        Model = await Http.GetFromJsonAsync<Character>($"http://localhost:80/api/home/getCharacter/{id}");
    }

    async Task EditCharacter(){
        Console.WriteLine("AMOGUS");
        await Http.PostAsJsonAsync($"http://localhost:80/api/home/EditCharacter", Model);
    }

}

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewpoint" content="with=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="@Assets["css/CharacterPage.css"]">
    <title>Origins New Horizons | @Model.Name</title>
    <link href='https://cdn.boxicons.com/fonts/basic/boxicons.min.css' rel='stylesheet'>
</head>


@if (InfoTab == 0)
{
    if (@Model.PlayerColor == null)
    {
        <style>
            :root {
                --playerColor:
                    #e0e0e0;
            }
        </style>
    }
    else
    {
        <style>
            :root {
                --playerColor:
                    @Model.PlayerColor
                ;
            }
        </style>
    }
}

@if (InfoTab == 1)
{
    if (@Model.TransformedColor == null)
    {
        <style>
            :root {
                --playerColor:
                    #e0e0e0;
            }
        </style>
    }
    else
    {
        <style>
            :root {
                --playerColor:
                    @Model.TransformedColor
                ;
            }
        </style>
    }
}


<div class="transform-info">
    <nav class="left-nav">
        <button @onclick="(() => ChangeInfoTab(0))">Padrão</button>
        <button @onclick="(() => ChangeInfoTab(1))">Transformado</button>
    </nav>
    <nav class="right-nav">
        <button @onclick="(() => ChangeTab(0))">Especialidades</button>
        <button @onclick="(() => ChangeTab(1))">Combate</button>
        <button @onclick="(() => ChangeTab(2))">Status</button>
        <button @onclick="(() => ChangeTab(3))">Habilidades</button>
        <button @onclick="(() => ChangeTab(4))">Informações</button>
        <button class="config"><img src="@Assets["images/cog.png"]"></button>
        <button class="config"><img src="@Assets["images/save.png"]" @onclick="() => EditCharacter()"></button>
    </nav>
</div>

<div class="panels">
    <div class="player-panel">

        @if (InfoTab == 0)
        {
            <BasePlayerInfo @bind-Model=Model edit="@Edit" />
        }

        @if (InfoTab == 1)
        {
            <TransformedPlayerInfo id="@id" />
        }

    </div>
</div>

<div class="player-status">

    @if (Tab == 0)
    {
        <Speciality edit="@Edit" @bind-Model=Model/>
    }

    @if (Tab == 1)
    {
        <Combat id="@id" />
    }

    @if (Tab == 2)
    {
        <Stats id="@id" />
    }

    @if (Tab == 3)
    {
        <Habilities id="@id" />
    }

    @if (Tab == 4)
    {
        <Information id="@id" @bind-Model=Model/>
    }
</div>

