@using Database
@rendermode InteractiveServer
@inject HttpClient Http
@code {
    [Parameter] public Character Model { get; set; }
    [Parameter] public EventCallback<Character> ModelChanged { get; set; }
    [Parameter] public int init { get; set; }

    async Task ChangeModel()
    {
        await ModelChanged.InvokeAsync(Model);

    }

    [Parameter] public bool edit { get; set; }

    /* public double CalcBarPercent(int i, int t)
    {

    if (t == 0)
    {
    return 0;
    }
    return (i / t) * 100;
    }
    double percent = CalcBarPercent(init, max);
    */
}

<div class="sub-player-panel">
    <div class="player-image">
        <input class="user-img" type="image" src="../images/plusv2.png" alt="Submit">
    </div>
    <div class="player-info">
        @if (@Model.Class == "dps")
        {
            <img class="player-class" src="@Assets["images/DPS.png"]" />
        }
        @if (@Model.Class == "tank")
        {
            <img class="player-class" src="@Assets["images/TANK.png"]" />
        }
        @if (@Model.Class == "support")
        {
            <img class="player-class" src="@Assets["images/SUP.png"]" />
        }
        <p>
            Nome: @Model.Name <br>
            Level:
            @if (edit)
            {
                <input type="number" value="@Model.Level" class="data-input" @bind-level="@Model.Level"
                    @bind-level:event="oninput" @onchange="() => ChangeModel()">
            }
            <br>
            Mentor: @Model.Mentor<br>
        </p>
    </div>
</div>


@if (edit)
{
    <div class="colors">
        <div class="color-select">
            <h1>Cor do jogador:</h1>
            <input type="color" class="color picker" value="@Model.PlayerColor" @bind-color="@Model.PlayerColor"
                @bind-color:event="oninput" @onchange="() => ChangeModel()">
        </div>

        <div class="color-select">
            <h1>Cor da transformação:</h1>
            <input type="color" class="color picker" value="@Model.TransformedColor"
                @bind-transformedcolor="@Model.TransformedColor" @bind-transformedcolor:event="oninput"
                @onchange="() => ChangeModel()">
        </div>
    </div>
}

<div class="player-bars">
    <h1>Vitalidade</h1>
    <div class="bars">
        <div class="text-bar">
            <input type="number" class="input-left" value="@Model.CurrentVitality"
                @bind-currentvitality="@Model.CurrentVitality" @bind-currentvitality:event="oninput"
                @onchange="() => ChangeModel()">
            <h1>/</h1>
            <input type="number" class="input-right" value="@Model.Vitality" @bind-vitality="@Model.Vitality"
                @bind-vitality:event="oninput" @onchange="() => ChangeModel()">
        </div>
        <div class="life-bar" style="width:@Model.CurrentVitality;"></div>
    </div>

    <h1>Vigor</h1>
    <div class="bars">
        <div class="text-bar">
            <input type="number" class="input-left" value="@Model.CurrentVigor" @bind-currentvigor="@Model.CurrentVigor"
                @bind-currentvigor:event="oninput" @onchange="() => ChangeModel()">
            <h1>/</h1>
            <input type="number" class="input-right" value="@Model.Vigor" @bind-vigor="@Model.Vigor"
                @bind-vigor:event="oninput" @onchange="() => ChangeModel()">
        </div>
        <div class="vigor-bar" style="width:@Model.CurrentVigor;"></div>
    </div>

    <h1>Energia</h1>
    <div class="bars">
        <div class="text-bar">
            <input type="number" class="input-left" value="@Model.CurrentEnergyStats"
                @bind-currentenergystats="@Model.CurrentEnergyStats" @bind-currentenergystats:event="oninput"
                @onchange="() => ChangeModel()">
            <h1>/</h1>
            <input type="number" class="input-right" value="@Model.EnergyStats" @bind-energystats="@Model.EnergyStats"
                @bind-energystats:event="oninput" @onchange="() => ChangeModel()">
        </div>
        <div class="energy-bar" style="width:@Model.CurrentEnergyStats;"></div>
    </div>

    <h1>Sanidade</h1>
    <div class="bars">
        <div class="text-bar">
            <input type="number" class="input-left" value="@Model.CurrentSanity"
                @bind-currentsanity="@Model.CurrentSanity" @bind-currentsanity:event="oninput"
                @onchange="() => ChangeModel()">
            <h1>/</h1>
            <input type="number" class="input-right" value="@Model.Sanity" @bind-sanity="@Model.Sanity"
                @bind-sanity:event="oninput" @onchange="() => ChangeModel()">
        </div>
        <div class="sanity-bar" style="width:@Model.CurrentSanity%;"></div>
    </div>

    <h1>Humanidade</h1>
    <div class="bars">
        <div class="text-bar">
            <input type="number" class="input-left" value="@Model.CurrentHumanity"
                @bind-currenthumanity="@Model.CurrentHumanity" @bind-currenthumanity:event="oninput"
                @onchange="() => ChangeModel()">
            <h1>/</h1>
            <input type="number" class="input-right" value="@Model.Humanity" @bind-humanity="@Model.Humanity"
                @bind-humanity:event="oninput" @onchange="() => ChangeModel()">
        </div>
        <div class="humanity-bar" style="width:@Model.CurrentHumanity;"></div>
    </div>
</div>
